/*
* 数字以0123456789101112131415…的格式序列化到一个字符序列中。
在这个序列中，第5位（从0开始计数）是5，第13位是1，第19位是4，等等。
请写一个函数求任意位对应的数字。

样例
输入：13
输出：1
* */

/*
* 题解:
* 我们要求的是该字符串中位置p上的数字
* 1.确定该位置p所属数字n是几位数: 假设n-10-90*2-900*3 = 256，说明n是四位数字，且p的位置在从1000开始往后数的第256位，
* 2.确定数字n是哪个数: 四位数字的开始是1000，又四位数每个数字有四位，故n=1000+256/4 =1064
* 3.确定位置p属于数字n的第几位：256除以4余数为0，故是该位数字的最后一位
* */
public class 数字题_数字序列中某一位的数字 {
    public int digitAtIndex(int n) {
        long i = 1;
        long s = 9;
        long base = 1;
        while(n>i*s){
            n -= i*s;
            i++;
            s *= 10;
            base *= 10;
        }
//        2.算出p位置所属的数字n是多少
//        n除以i,上取整的写法：(n+i-1)/i-1
        long number = base + (n+i-1)/i-1;
//        3.求p在数字n中是第几个数字，如果余数为零是左后一位数字，将r置为i
        long r = n%i!=0? n%i:i;
//        取出i位数的第r位出来
        for(int j = 0; j<i-r; j++)
            number/=10;
        return (int)number%10;
    }
}
